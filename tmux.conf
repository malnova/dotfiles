#####################################################
# P R É F É R E N C E S   G É N É R A L E S         #
#####################################################
#
# Il n'y a pas de fichier de configuration par défaut dans tmux.
# Un court exemple de fichier de configuration est disponible à l'adresse :
# https://github.com/tmux/tmux/blob/master/example_tmux.conf
# On peut aussi créer un fichier de configuration par défaut à partir des
# paramètres actuels avec l'instruction : tmux show -g > ~/.tmux.conf
# ou (avant la version 1.8) tmux show -g | cat > ~/.tmux.conf
#
# set est un alias pour set-option
# setw est un alias pour set-window-option

# Déclencher les événements corrects de focus, notamment pour vim
set-option -g focus-events on

# Délai entre deux commandes sans répéter le préfixe, en ms (défaut : 500)
# Vaut pour tous les raccourcis/keybinds définis avec l'option -r
set-option -g repeat-time 200

# Changer l'environnement pour permettre l'affichage des italiques
set-option -g default-terminal "tmux"

# Changer pour les touches spéciales
set-window-option -g xterm-keys on

# Nombre de lignes pour le scrollback (2000 par défaut)
# Dépend aussi du nombre de lignes fixé par URxvt dans ~/.Xresources
# ! Peut utiliser beaucoup de RAM si plusieurs fenêtres sont ouvertes !
set-option -g history-limit 8192

# Scrolling à la souris ou au touchpad
set-option -g mouse on
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi WheelUpPane send-keys -X halfpage-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X halfpage-down

# Réduire le délai entre les changements de mode
set-option -s escape-time 0


#####################################################
# C O U L E U R S                                   #
#####################################################
#
# Les couleurs possibles (cf. man tmux) sont : default, black, red, green,
# yellow, blue, magenta, cyan, white ainsi que certaines variantes avec
# "bright" (par ex. brightred, brightgreen...), les couleurs colour0 à
# colour255, ou les valeurs hexadécimalex RGB comme #ffffff.
#
# Pour obtenir la liste des couleurs de colour0 à colour255 dans bash :
# for i in {0..255};do printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n";done

# Délimitation des panneaux
set-option -g pane-border-style fg=colour239
set-option -g pane-active-border-style fg=green

# message text
set-option -g message-style bg=black,fg=brightred

# pane number display
set-option -g display-panes-active-colour blue
set-option -g display-panes-colour brightred

# Heure
set-window-option -g clock-mode-colour green


#####################################################
# B A R R E   D ' É T A T                           #
#####################################################

# Ne rien afficher dans la partie en bas à droite
set-option -g status-right ''

# Couleurs
set-option -g status-style bg=default,fg=yellow

# Couleurs par défaut pour le nom des fenêtres
set-window-option -g window-status-style bg=default,fg=brightblue

# Couleurs du nom de la fenêtre active
set-window-option -g window-status-current-style bg=default,fg=brightred


#####################################################
# K E Y B I N D S                                   #
#####################################################
#
# La touche "Ctrl" n'étant pas sensible à la casse, les combinaisons
# incluant C-S (Ctrl+Shift) sont impossibles.

# Changer le préfixe
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Diviser les fenêtres en utilisant les touches Préfixe+| et Préfixe+-
unbind '"'
unbind %
bind-key -r | split-window -h
bind-key -r - split-window -v

# Détacher un panneau
bind-key d break-pane
bind-key ! detach-client

# Entrer dans le mode "copie" avec Préfixe+Esc
unbind [
unbind ]
bind-key Escape copy-mode

# Touche Escape intelligente
bind -T copy-mode-vi Escape if-shell -F '#{selection_present}' 'send-keys -X clear-selection' 'send-keys -X cancel'
bind-key -n Escape if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" '' 'send-keys Escape'

# Permettre aux touches Home, End et Ctrl-Flèches de fonctionner en mode "copie"
bind-key -T copy-mode-vi Home send-keys 0
bind-key -T copy-mode-vi End send-keys $
bind-key -T copy-mode-vi C-Left send-keys -X previous-word
bind-key -T copy-mode-vi C-Right send-keys -X next-word

# Copier dans le clipboard (au lieu du buffer de tmux)
# Requiert l'installation du paquet xsel
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"

# Liste des raccourcis claviers (fn-F1)
unbind ?
bind-key -n F1 list-keys

# Afficher l'heure
bind-key h clock-mode

# Fermer la session courante
unbind f
bind-key f kill-session


#####################################################
# P L U G I N   V I M   T M U X   N A V I G A T O R #
#####################################################
#
# https://github.com/christoomey/vim-tmux-navigator

# Keybinds modifiés pour garder le fonctionnement normal de Ctrl+flèches
# lorsqu'il n'y a qu'un seul panneau existant + remplacement du test trop
# lent avec is_vim.
bind-key -n 'C-Left' if-shell 'test #{window_panes} -gt 1' 'if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" "select-pane -L" "send-keys C-Left"' 'if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" "send-keys C-Left" "send-keys C-H"'
bind-key -n 'C-Down' if-shell 'test #{window_panes} -gt 1' 'if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" "select-pane -D" "send-keys C-Down"' 'if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" "send-keys C-Down" "send-keys C-J"'
bind-key -n 'C-Up' if-shell 'test #{window_panes} -gt 1' 'if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" "select-pane -U" "send-keys C-Up"' 'if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" "send-keys C-Up" "send-keys C-K"'
bind-key -n 'C-Right' if-shell 'test #{window_panes} -gt 1' 'if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" "select-pane -R" "send-keys C-Right"' 'if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" "send-keys C-Right" "send-keys C-L"'
bind-key -n 'C-Home' if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" 'send-keys Home' 'send-keys C-Home'
bind-key -n 'C-End' if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" 'send-keys End' 'send-keys C-End'


#####################################################
# P L U G I N   V I M   T M U X   R E S I Z E R     #
#####################################################
#
# https://github.com/RyanMillerC/better-vim-tmux-resizer

# Keybinds modifiés pour remplacement du test trop lent avec is_vim.
bind-key -n 'S-Left' if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" 'resize-pane -L 2' 'send-keys S-Left'
bind-key -n 'S-Down' if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" 'resize-pane -D 2' 'send-keys S-Down'
bind-key -n 'S-Up' if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" 'resize-pane -U 2' 'send-keys S-Up'
bind-key -n 'S-Right' if -F "#{?#{m:\*vim\*,#{pane_current_command}},0,1}" 'resize-pane -R 2' 'send-keys S-Right'
